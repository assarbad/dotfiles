#!/usr/bin/env bash
[[ -t 1 ]] && { cG="\e[1;32m"; cR="\e[1;31m"; cB="\e[1;34m"; cW="\e[1;37m"; cY="\e[1;33m"; cG_="\e[0;32m"; cR_="\e[0;31m"; cB_="\e[0;34m"; cW_="\e[0;37m"; cY_="\e[0;33m"; cZ="\e[0m"; export cR cG cB cY cW cR_ cG_ cB_ cY_ cW_ cZ; }
TOOLS_NEEDED="dirname readlink desktop-file-edit update-desktop-database chmod cat"
for tool in $TOOLS_NEEDED; do type $tool > /dev/null 2>&1 || { echo -e "${cR}ERROR:${cZ} couldn't find '$tool' which is required by this script."; exit 1; }; done
pushd $(dirname $0) > /dev/null; CURRABSPATH=$(readlink -nf "$(pwd)"); popd > /dev/null; # Get the directory in which the script resides
CMDLINE_OPTIONS="h?c:i:n:v:x:"

function show_help
{
	echo -e "Syntax: $MEANDMYSELF [-h|-?] [-c <comment>] [-i <icon>] [-n <name>] [-v <vendor>] [-x <executable>]"
	echo -e "\t${cW}-h | -?${cZ}"
	echo -e "\t  Show this help"
}

while getopts "$CMDLINE_OPTIONS" opt; do
	case "$opt" in
	h|\?)
		show_help
		exit 0
		;;
	c)  [[ -n "$OPTARG" ]] || { echo -e "${cR}ERROR:${cZ} ${cY}-$opt${cZ} requires an argument." >&2; exit 1; }
		COMMENT="$OPTARG"
		;;
	i)  [[ -n "$OPTARG" ]] || { echo -e "${cR}ERROR:${cZ} ${cY}-$opt${cZ} requires an argument." >&2; exit 1; }
		ICON="$OPTARG"
		;;
	n)  [[ -n "$OPTARG" ]] || { echo -e "${cR}ERROR:${cZ} ${cY}-$opt${cZ} requires an argument." >&2; exit 1; }
		APPNAME="$OPTARG"
		;;
	v)  [[ -n "$OPTARG" ]] || { echo -e "${cR}ERROR:${cZ} ${cY}-$opt${cZ} requires an argument." >&2; exit 1; }
		VENDOR="$OPTARG"
		;;
	x)  [[ -n "$OPTARG" ]] || { echo -e "${cR}ERROR:${cZ} ${cY}-$opt${cZ} requires an argument." >&2; exit 1; }
		EXECUTABLE="$OPTARG"
		;;
	esac
done

[[ -n "$APPNAME" ]] || { echo -e "${cR}ERROR:${cZ} application name must be set (${cW}-n <name>${cZ})"; exit 1; }
[[ -n "$EXECUTABLE" ]] || { echo -e "${cR}ERROR:${cZ} executable path must be set (${cW}-x <path>${cZ})"; exit 1; }
DESKTOP_FILE="$HOME/.local/share/applications/$APPNAME.desktop"
set -o noclobber; cat > "$DESKTOP_FILE" <<EOF
#!/usr/bin/env xdg-open

[Desktop Entry]
Version=1.0
Type=Application
Terminal=false
Exec=$EXECUTABLE
Name=$APPNAME
Icon=$ICON
EOF
( set -e; set -x; desktop-file-edit \
	--set-generic-name="$APPNAME" \
	--copy-generic-name-to-name \
	${COMMENT:+--set-comment="$COMMENT"} ${VENDOR:+--set-vendor="$VENDOR"}  "$DESKTOP_FILE" )
( set -x; chmod +x "$DESKTOP_FILE" )
( set -e; set -x; update-desktop-database "${DESKTOP_FILE%/*}" )
