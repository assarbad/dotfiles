#!/usr/bin/env bash
# vim: set autoindent smartindent ts=4 sw=4 sts=4 noet filetype=sh:

function ducks
{
	[[ -t 1 ]] && { \
		local cG="\033[1;32m"; \
		local cR="\033[1;31m"; \
		local cB="\033[1;34m"; \
		local cW="\033[1;37m"; \
		local cY="\033[1;33m"; \
		local cG_="\033[0;32m"; \
		local cR_="\033[0;31m"; \
		local cB_="\033[0;34m"; \
		local cW_="\033[0;37m"; \
		local cY_="\033[0;33m"; \
		local cZ="\033[0m"; \
	}
	for tool in du sort head awk sed; do type $tool > /dev/null 2>&1 || { echo -e "${cR}ERROR:${cZ} couldn't find '$tool' which is required by this function."; return; }; done
	local SCANDIR=.
	[[ -n "$1" && -d "$1" ]] && SCANDIR=${1%/}
	du -cks "$SCANDIR"/*|sort -rn|head -11|sed 's/\t/:/g'|awk -F : '\
	{
		OSZ=$1;
		SZ=OSZ;
		UNIT="KiB";
		if(SZ > 1536) {
			SZ=SZ/1024;
			UNIT="MiB";
		}
		if(SZ > 1536) {
			SZ=SZ/1024;
			UNIT="GiB";
		}
		if(SZ > 1536) {
			SZ=SZ/1024;
			UNIT="TiB";
		}
		if(SZ > 1536) {
			SZ=SZ/1024;
			UNIT="PiB";
		}
		printf "%-5.3f %s", SZ, UNIT;
		if ($2 ~ /^total$/) {
			printf "\t'${cR}'%s'${cZ}'\n", $2
		} else {
			printf "\t'${cW}'%s'${cZ}'\n", $2
		}
	}'
}

let SOURCED=1
(return >/dev/null 2>&1) || let SOURCED=0

if ! ((SOURCED)); then
	ducks "$@"
fi

unset SOURCED
